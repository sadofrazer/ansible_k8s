---
- name: "Apache installation using docker"
  hosts: Prod
  become: true

  tasks:
    - name: generate sh file to create k8s master
      template:
        src: "k8s_master.sh.j2"
        dest: "/home/{{ ansible_user }}/k8s_master.sh"
      when: env == "master"
        
    - name: Install kubernetes for master nodes
      command: " sh /home/{{ ansible_user }}/k8s_master.sh"
      when: env == "master"
      ignore_errors: True

    - name: generate sh file to initialize the k8s cluster
      template:
        src: "cluster_init.sh.j2"
        dest: "/home/{{ ansible_user }}/cluster_init.sh"
      when: env == "master"

    - name: cluster initialize
      command: " sh /home/{{ ansible_user }}/cluster_init.sh"
      when: env == "master"
      ignore_errors: True

    - name: generate sh file to install weave cni plugin
      template:
        src: "weave_install.sh.j2"
        dest: "/home/{{ ansible_user }}/weave_install.sh"
      when: env == "master"
  
    - name: create kubeconfig file
      file:
        path: "/home/{{ ansible_user }}/.kube"
        recurse: yes
        state: directory
      when: env == "master"

    - name: give the right to centos (copy conf files)
      command: "cp /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config"
      when: env == "master"
      ignore_errors: True

    - name: give the right to centos
      command: "chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config"
      when: env == "master"
      ignore_errors: True  

    - name: generate sh file to create k8s worker
      template:
        src: "k8s_worker.sh.j2"
        dest: "/home/{{ ansible_user }}/k8s_worker.sh"
      when: env == "worker"
 
    - name: Install kubernetes for worker nodes
      command: " sh /home/{{ ansible_user }}/k8s_worker.sh"
      when: env == "worker"
      ignore_errors: True 
    
    - name : give the right to user on docker
      command: sudo usermod -aG docker {{ ansible_user }}

# join worker nodes to master.
    
    - name: generate sh file to create k8s worker
      template:
        src: "token_create.sh.j2"
        dest: "/home/{{ ansible_user }}/token_create.sh"
      when: env == "master"
 
    - name: create join command on master nodes 
      command: "sh /home/{{ ansible_user }}/token_create.sh"
      when: env == "master"
      ignore_errors: True 

    - name: download join file
      fetch: 
        src: /home/{{ ansible_user }}/join-cmd.sh
        dest: /home/centos/
        flat: yes
      when: env == "master"
    
    - name: attribute hosts variables
      set_fact:
        master_name: "{{ ansible_hostname }}"
      when: env == "master"

    - name: copying de join file on worker
      copy:
        src: /home/{{ ansible_user }}/join-cmd.sh
        dest: /home/{{ ansible_user }}/join-cmd.sh
      when: (env == "worker")

    - name: execute the join command worker
      command: "sh join-cmd.sh"
      args:
        chdir: "/home/{{ ansible_user }}/"
      when: (env == "worker")

    - name: Install weave Cni plugin
      become: false
      command: "sh /home/{{ ansible_user }}/weave_install.sh"
      when: env == "master"
      ignore_errors: True